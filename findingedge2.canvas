{
  "objectType" : "Graph",
  "metadata" : {
    "camera_mat44" : "{\n  \"row0\" : {\n    \"x\" : -0.9990379810333252,\n    \"y\" : -0.05360426008701325,\n    \"z\" : 0.01198624167591333,\n    \"t\" : 0.1261617988348007\n    },\n  \"row1\" : {\n    \"x\" : 1.222565288117039e-06,\n    \"y\" : 0.2181637585163117,\n    \"z\" : 0.9761690497398377,\n    \"t\" : 13.25847148895264\n    },\n  \"row2\" : {\n    \"x\" : -0.05495470389723778,\n    \"y\" : 0.9744928479194641,\n    \"z\" : -0.2178796678781509,\n    \"t\" : -3.781644344329834\n    },\n  \"row3\" : {\n    \"x\" : 0,\n    \"y\" : 0,\n    \"z\" : 0,\n    \"t\" : 1\n    }\n  }",
    "timeline_start" : "1",
    "timeline_loopMode" : "1",
    "uiGraphZoom" : "{\n  \"value\" : 0.6007722020149231\n  }",
    "timeline_simMode" : "0",
    "camera_focalDistance" : "9.1767578125",
    "timeline_current" : "1",
    "timeline_end" : "50",
    "uiGraphPan" : "{\n  \"x\" : 490.2003173828125,\n  \"y\" : -221.2579040527344\n  }"
    },
  "title" : "",
  "ports" : [
    {
      "objectType" : "Port",
      "metadata" : {
        "uiPersistValue" : "true"
        },
      "nodePortType" : "Out",
      "name" : "filePath",
      "execPortType" : "In",
      "typeSpec" : "String"
      },
    {
      "objectType" : "Port",
      "metadata" : {
        "uiPersistValue" : "true"
        },
      "nodePortType" : "Out",
      "name" : "MeshScale",
      "execPortType" : "In",
      "typeSpec" : "Float32"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "this",
      "execPortType" : "Out",
      "typeSpec" : "DrawingHandle"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "value",
      "execPortType" : "Out",
      "typeSpec" : "Float64[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "value_2",
      "execPortType" : "Out",
      "typeSpec" : "Float64[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "value_3",
      "execPortType" : "Out",
      "typeSpec" : "Float64[]"
      },
    {
      "objectType" : "Port",
      "metadata" : {
        "uiPersistValue" : "true"
        },
      "nodePortType" : "Out",
      "name" : "order",
      "execPortType" : "In",
      "typeSpec" : "UInt32"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "value_4",
      "execPortType" : "Out",
      "typeSpec" : "Float64"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "dummyResult",
      "execPortType" : "Out",
      "typeSpec" : "Vec3"
      },
    {
      "objectType" : "Port",
      "metadata" : {},
      "nodePortType" : "Out",
      "name" : "tr",
      "execPortType" : "In",
      "typeSpec" : "Vec3"
      }
    ],
  "extDeps" : {},
  "nodes" : [
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-302.4159545898438,\"y\":663.4241943359375}"
        },
      "name" : "LoadImage",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "verbose"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "filePath"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "pixels"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "width"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "height"
          }
        ],
      "definition" : {
        "objectType" : "Graph",
        "metadata" : {
          "uiNodeColor" : "{\n  \"r\" : 144,\n  \"g\" : 130,\n  \"b\" : 120\n  }",
          "uiGraphZoom" : "{\n  \"value\" : 0.8138958215713501\n  }",
          "uiHeaderColor" : "{\n  \"r\" : 115,\n  \"g\" : 105,\n  \"b\" : 75\n  }",
          "uiTooltip" : "loads an image from disk",
          "uiGraphPan" : "{\n  \"x\" : 21.2629981637001,\n  \"y\" : 9.372200310230255\n  }"
          },
        "title" : "LoadImage",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "verbose",
            "execPortType" : "In",
            "typeSpec" : "Boolean"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "defaultValues" : {
              "String" : "C:\\Temp\\image1.jpg"
              },
            "name" : "filePath",
            "execPortType" : "In",
            "typeSpec" : "String"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "result",
            "execPortType" : "Out",
            "typeSpec" : "Image2DColor"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "pixels",
            "execPortType" : "Out",
            "typeSpec" : "Color[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "width",
            "execPortType" : "Out",
            "typeSpec" : "Size"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "height",
            "execPortType" : "Out",
            "typeSpec" : "Size"
            }
          ],
        "extDeps" : {
          "OpenImageIO" : "*",
          "FileIO" : "*",
          "Images" : "*"
          },
        "origPresetGUID" : "71A393CF88679424EF2212A78848F258",
        "nodes" : [
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":125.0,\"y\":50.0}"
              },
            "name" : "applyLoadImage",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "verbose"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "filePath"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "success"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "image"
                }
              ],
            "definition" : {
              "objectType" : "Func",
              "title" : "applyLoadImage",
              "ports" : [
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "verbose",
                  "execPortType" : "In",
                  "typeSpec" : "Boolean"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "filePath",
                  "execPortType" : "In",
                  "typeSpec" : "String"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "success",
                  "execPortType" : "Out",
                  "typeSpec" : "Boolean"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "image",
                  "execPortType" : "Out",
                  "typeSpec" : "Image2DColor"
                  }
                ],
              "extDeps" : {},
              "code" : "require OpenImageIO;
require FileIO;
require Images;

dfgEntry
{ 
  // init the outputs.
  success = false;
  image   = Image2DColor();

  // open the image file.
  if (verbose)  report(\"opening image file \\\"\" + filePath + \"\\\"\");
  OpenImageInput file = OpenImageInput();
  file.open(filePath);
  if(!file.valid())
  {
    if (verbose)  report(\"ERROR: unable to open image file.\");
    return;
  }
  
  // get the image file's specs, verbose and check image resolution.
  OpenImageSpec fileSpec = file.spec();
  if (verbose)
  {
    report(\"   width    = \" + fileSpec.get_full_width ());
    report(\"   height   = \" + fileSpec.get_full_height());
    report(\"   channels = \" + fileSpec.get_nchannels  ());
  }
  if (fileSpec.get_full_width() <= 0 || fileSpec.get_full_height() <= 0)
  {
    if (verbose)  report(\"ERROR: bad image resolution.\");
    return;
  }
  
  // set output image from image file data.
  OpenImageTypeDesc fileDesc = OpenImageTypeDesc(OpenImage_BASETYPE_FLOAT, OpenImage_AGGREGATE_SCALAR, OpenImage_VECSEMANTICS_NOXFORM);
  switch (fileSpec.get_nchannels())
  {
    case 1:    // gray scale.
    {
      image.resize(fileSpec.get_full_width(), fileSpec.get_full_height());
      Float32 tmp[];
      tmp.resize(image.width * image.height);
      Data data = tmp.data();
      success = file.read_image(fileDesc, data, 0, 0, 0);
      if (success)
      {
        for (UInt32 i=0;i<image.pixels.size();i++)
        {
          image.pixels[i].r = tmp[i];
          image.pixels[i].g = tmp[i];
          image.pixels[i].b = tmp[i];
          image.pixels[i].a = 1.0;
        }
      }
      else
        if (verbose)  report(\"ERROR: read error.\");
      break;
    }
    case 3:    // RGB.
    {
      image.resize(fileSpec.get_full_width(), fileSpec.get_full_height());
      Float32 tmp[];
      tmp.resize(image.width * image.height * 3);
      Data data = tmp.data();
      success = file.read_image(fileDesc, data, 0, 0, 0);
      if (success)
      {
        UInt32 offset = 0;
        for (UInt32 i=0;i<image.pixels.size();i++)
        {
          image.pixels[i].r = tmp[offset++];
          image.pixels[i].g = tmp[offset++];
          image.pixels[i].b = tmp[offset++];
          image.pixels[i].a = 1.0;
        }
      }
      else
        if (verbose)  report(\"ERROR: read error.\");
      break;
    }
    case 4:    // RGBA.
    {
      image.resize(fileSpec.get_full_width(), fileSpec.get_full_height());
      Data data = image.pixels.data();
      success = file.read_image(fileDesc, data, 0, 0, 0);
      if (!success)
        if (verbose)  report(\"ERROR: read error.\");
      break;
    }
    default:   // unsupported amount of channels.
    {
      if (verbose)  report(\"ERROR: unsupported amount of channels.\");
      break;
    }
  }
  
  // done.
  if (success && verbose)
    report(\"image successfully read.\");
}

"
              }
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":365.0,\"y\":153.0}"
              },
            "name" : "Cache_2",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "value"
                }
              ],
            "executable" : "Fabric.Core.Data.Cache",
            "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":957.7288818359375,\"y\":208.054931640625}"
              },
            "name" : "imageMetaData",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "image"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "pixels"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "width"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "height"
                }
              ],
            "definition" : {
              "objectType" : "Func",
              "title" : "imageMetaData",
              "ports" : [
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "image",
                  "execPortType" : "In",
                  "typeSpec" : "Image2D"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "pixels",
                  "execPortType" : "Out",
                  "typeSpec" : "Color[]"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "width",
                  "execPortType" : "Out",
                  "typeSpec" : "Size"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "height",
                  "execPortType" : "Out",
                  "typeSpec" : "Size"
                  }
                ],
              "extDeps" : {},
              "code" : "dfgEntry {
  //result = lhs + rhs;
  pixels = image.pixels;
  width = image.width;
  height = image.height;
}
"
              }
            }
          ],
        "connections" : {
          "verbose" : [
            "applyLoadImage.verbose"
            ],
          "filePath" : [
            "applyLoadImage.filePath"
            ],
          "applyLoadImage.image" : [
            "Cache_2.value"
            ],
          "Cache_2.value" : [
            "imageMetaData.image"
            ],
          "imageMetaData.image" : [
            "result"
            ],
          "imageMetaData.pixels" : [
            "pixels"
            ],
          "imageMetaData.width" : [
            "width"
            ],
          "imageMetaData.height" : [
            "height"
            ]
          }
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":759.0889282226563,\"y\":1076.8330078125}"
        },
      "name" : "FourierSeries",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "data"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "order"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "sincoefficients"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "coscoefficients"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "title" : "FourierSeries",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "data",
            "execPortType" : "In",
            "typeSpec" : "$TYPE$[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "order",
            "execPortType" : "In",
            "typeSpec" : "UInt32"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "sincoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "coscoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            }
          ],
        "extDeps" : {},
        "code" : "dfgEntry {
  sincoefficients.resize(0);
  coscoefficients.resize(0);
  Float64 doublepi = 6.28318530717958648;
  Float64 multiplier;
  for (UInt32 j = 0 ; j < order + 1 ; j++){
      Float64 sinsum = 0;
      Float64 cossum = 0;
      multiplier = 1;
      if (j==0){
        multiplier = 0.5;
      }
      for (UInt32 i = 0 ; i<data.size() ; i++){
        sinsum = sinsum + ( 2. / data.size() ) * sin( ( doublepi * j * i )/ data.size() ) * data[i] ;
        cossum = cossum + ( 2. * multiplier / data.size() ) * cos( ( doublepi * j * i )/ data.size() ) * data[i] ;
      }
      sincoefficients.push(sinsum);
      coscoefficients.push(cossum);
   }
}
"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":751.930419921875,\"y\":935.6436767578125}"
        },
      "name" : "FourierSeries_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "data"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "order"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "sincoefficients"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "coscoefficients"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "title" : "FourierSeries",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "data",
            "execPortType" : "In",
            "typeSpec" : "$TYPE$[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "order",
            "execPortType" : "In",
            "typeSpec" : "UInt32"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "sincoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "coscoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            }
          ],
        "extDeps" : {},
        "code" : "dfgEntry {
  sincoefficients.resize(0);
  coscoefficients.resize(0);
  Float64 doublepi = 6.28318530717958648;
  Float64 multiplier;
  for (UInt32 j = 0 ; j < order + 1 ; j++){
      Float64 sinsum = 0;
      Float64 cossum = 0;
      multiplier = 1;
      if (j==0){
        multiplier = 0.5;
      }
      for (UInt32 i = 0 ; i<data.size() ; i++){
        sinsum = sinsum + ( 2. / data.size() ) * sin( ( doublepi * j * i )/ data.size() ) * data[i] ;
        cossum = cossum + ( 2. * multiplier / data.size() ) * cos( ( doublepi * j * i )/ data.size() ) * data[i] ;
      }
      sincoefficients.push(sinsum);
      coscoefficients.push(cossum);
   }
}
"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":761.686279296875,\"y\":1229.859497070313}"
        },
      "name" : "FourierSeries_3",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "data"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "order"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "sincoefficients"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "coscoefficients"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "title" : "FourierSeries",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "data",
            "execPortType" : "In",
            "typeSpec" : "$TYPE$[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "order",
            "execPortType" : "In",
            "typeSpec" : "UInt32"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "sincoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "coscoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            }
          ],
        "extDeps" : {},
        "code" : "dfgEntry {
  sincoefficients.resize(0);
  coscoefficients.resize(0);
  Float64 doublepi = 6.28318530717958648;
  Float64 multiplier;
  for (UInt32 j = 0 ; j < order + 1 ; j++){
      Float64 sinsum = 0;
      Float64 cossum = 0;
      multiplier = 1;
      if (j==0){
        multiplier = 0.5;
      }
      for (UInt32 i = 0 ; i<data.size() ; i++){
        sinsum = sinsum + ( 2. / data.size() ) * sin( ( doublepi * j * i )/ data.size() ) * data[i] ;
        cossum = cossum + ( 2. * multiplier / data.size() ) * cos( ( doublepi * j * i )/ data.size() ) * data[i] ;
      }
      sincoefficients.push(sinsum);
      coscoefficients.push(cossum);
   }
}
"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":329.3391723632813,\"y\":1001.570922851563}"
        },
      "name" : "findingedge",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "pixels"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "width"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "height"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "xdata"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "ydata"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "depthdata"
          }
        ],
      "definition" : {
        "objectType" : "Graph",
        "title" : "",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "pixels",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "width",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "height",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "xdata",
            "execPortType" : "Out"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "ydata",
            "execPortType" : "Out"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "depthdata",
            "execPortType" : "Out"
            }
          ],
        "extDeps" : {},
        "nodes" : [
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":-326.8580017089844,\"y\":383.3693542480469}"
              },
            "name" : "findfirstpixel",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "xstart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "ystart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "pixels"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "width"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "height"
                }
              ],
            "definition" : {
              "objectType" : "Func",
              "title" : "findfirstpixel",
              "ports" : [
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "xstart",
                  "execPortType" : "Out",
                  "typeSpec" : "UInt32"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "ystart",
                  "execPortType" : "Out",
                  "typeSpec" : "UInt32"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "pixels",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "width",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "height",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  }
                ],
              "extDeps" : {},
              "code" : "dfgEntry {
  // This fuction searches for an edge in the picture.
   // Our height is the number of rows of pixels
   xstart = 0;
  for (UInt32 row = 0; row < height; row++)
  {
    // For each row, find the maximum pixel R value
    for (UInt32 column = 0; column < width; column++)
    {
      // The pixels are stored in a 1D array, where
      // the rows are packed together.  We find the 
      // correct pixel by expanding our 2D indices
      // to a 1D address
      if (pixels[row * width + column].r > 0)
      {
        xstart = row;
        ystart = column;
      }
      if (xstart > 0)
        break;
    }
     if (xstart > 0)
       break;
  }
}"
              }
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":-29.80117797851563,\"y\":399.9150085449219}",
              "uiCollapsedState" : "0"
              },
            "name" : "findingsecondpixel_2",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "xstart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "ystart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "pixels"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "width"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "height"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "xfirst"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "yfirst"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "directionfirst"
                }
              ],
            "definition" : {
              "objectType" : "Func",
              "title" : "findingsecondpixel",
              "ports" : [
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "xstart",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "ystart",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "pixels",
                  "execPortType" : "In",
                  "typeSpec" : "Color[]"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "width",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "height",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "xfirst",
                  "execPortType" : "Out",
                  "typeSpec" : "UInt32"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "yfirst",
                  "execPortType" : "Out",
                  "typeSpec" : "UInt32"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "directionfirst",
                  "execPortType" : "Out",
                  "typeSpec" : "UInt8"
                  }
                ],
              "extDeps" : {},
              "code" : "dfgEntry {
   if (pixels[xstart* width + ystart + 1].r > 0)
   {
     directionfirst = 1;
     xfirst = xstart;
     yfirst = ystart+1;
   }
   else if (pixels[(xstart+1)* width + ystart ].r > 0)
   {
     directionfirst = 2;
     xfirst = xstart+1;
     yfirst = ystart;
   }
   else
   {
   report('Isolated pixel');
   }
   
  //result = lhs + rhs;
}
"
              }
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":411.5535583496094,\"y\":370.0595397949219}"
              },
            "name" : "findingremainingedgepixels",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "xstart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "ystart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "pixels"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "width"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "height"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "xfirst"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "yfirst"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "directionfirst"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "xdata"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "ydata"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "depthdata"
                }
              ],
            "definition" : {
              "objectType" : "Func",
              "title" : "findingremainingedgepixels",
              "ports" : [
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "xstart",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "ystart",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "pixels",
                  "execPortType" : "In",
                  "typeSpec" : "Color[]"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "width",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "height",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "xfirst",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "yfirst",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "directionfirst",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "xdata",
                  "execPortType" : "Out",
                  "typeSpec" : "Float64[]"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "ydata",
                  "execPortType" : "Out",
                  "typeSpec" : "Float64[]"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "depthdata",
                  "execPortType" : "Out",
                  "typeSpec" : "Float64[]"
                  }
                ],
              "extDeps" : {},
              "code" : "dfgEntry {
  
    UInt8 direction = directionfirst;
    xdata.resize(0);
    ydata.resize(0);
    depthdata.resize(0);
    UInt32 xcurrent = xfirst;
    UInt32 ycurrent = yfirst;
    xdata.push(xcurrent);
    ydata.push(ycurrent);
    depthdata.push(pixels[ (xcurrent  ) * width + (ycurrent) ].r);
    
    while((xcurrent != xstart || ycurrent != ystart)){

      // The first step is to identify where we are coming from. this is stored in direction. 
      // Direction has 4 options 1 moving to the right, 2 moving down, 3 moving to the left, 4 moving up. 
      // All of these directions are global or relative to the picture. These are the targets of the switch statements
      switch(direction){
		  case 1:
		  {//brace opening the case
			  if (pixels[ (xcurrent-1) * width + (ycurrent  ) ].r > 0){
				  xcurrent--;
				  direction = 4;
			  } else if (pixels[ (xcurrent  ) * width + (ycurrent+1) ].r > 0){
				  ycurrent++;
				  direction = 1;
  			} else if (pixels[ (xcurrent+1) * width + (ycurrent  ) ].r > 0){
	  			xcurrent++;
		  		direction = 2;
			  } else if (pixels[ (xcurrent  ) * width + (ycurrent-1) ].r > 0){
				  ycurrent--;
  				direction = 3;
	  		}
        break; 
  		}//brace closing the case
	  	case 2:
		  {//brace opening the case
			  if (pixels[ (xcurrent  ) * width + (ycurrent+1) ].r > 0){
				  ycurrent++;
  				direction = 1;
	  		} else if (pixels[ (xcurrent+1) * width + (ycurrent  ) ].r > 0){
		  		xcurrent++;
			  	direction = 2;
  			} else if (pixels[ (xcurrent  ) * width + (ycurrent-1) ].r > 0){
	  			ycurrent--;
		  		direction = 3;
			  } else if (pixels[ (xcurrent-1) * width + (ycurrent  ) ].r > 0){
				  xcurrent--;
  				direction = 4;
	  		} 
        break;
  		}//brace closing the case
	  	case 3:
		  {//brace opening the case
			  if (pixels[ (xcurrent+1) * width + (ycurrent  ) ].r > 0){
				  xcurrent++;
  				direction = 2;
	  		} else if (pixels[ (xcurrent  ) * width + (ycurrent-1) ].r > 0){
		  		ycurrent--;
			  	direction = 3;
  			} else if(pixels[ (xcurrent-1) * width + (ycurrent  ) ].r > 0){
	  			xcurrent--;
		  		direction = 4;
			  } else if (pixels[ (xcurrent  ) * width + (ycurrent+1) ].r > 0){
				  ycurrent++;
  				direction = 1;
	  		} 
        break;
  		}//brace closing the case
	  	case 4:
		  {//brace opening the case
			  if (pixels[ (xcurrent  ) * width + (ycurrent-1) ].r > 0){
				  ycurrent--;
  				direction = 3;
	  		} else if (pixels[ (xcurrent-1) * width + (ycurrent  ) ].r > 0){
		  		xcurrent--;
			  	direction = 4;
  			} else if (pixels[ (xcurrent  ) * width + (ycurrent+1) ].r > 0){
	  			ycurrent++;
		  		direction = 1;
			  } else if (pixels[ (xcurrent+1) * width + (ycurrent  ) ].r > 0){
				  xcurrent++;
  				direction = 2;
	  		}
  		}//brace closing the case
	  }//brace closing the switch
      xdata.push(xcurrent);
      ydata.push(ycurrent);
      depthdata.push(pixels[ (xcurrent  ) * width + (ycurrent  ) ].r);
  } //brace closing the while loop

}//brace closing the function
"
              }
            }
          ],
        "connections" : {
          "pixels" : [
            "findfirstpixel.pixels"
            ],
          "width" : [
            "findfirstpixel.width"
            ],
          "height" : [
            "findfirstpixel.height"
            ],
          "findfirstpixel.xstart" : [
            "findingsecondpixel_2.xstart"
            ],
          "findfirstpixel.ystart" : [
            "findingsecondpixel_2.ystart"
            ],
          "findfirstpixel.pixels" : [
            "findingsecondpixel_2.pixels"
            ],
          "findfirstpixel.width" : [
            "findingsecondpixel_2.width"
            ],
          "findfirstpixel.height" : [
            "findingsecondpixel_2.height"
            ],
          "findingsecondpixel_2.xstart" : [
            "findingremainingedgepixels.xstart"
            ],
          "findingsecondpixel_2.ystart" : [
            "findingremainingedgepixels.ystart"
            ],
          "findingsecondpixel_2.pixels" : [
            "findingremainingedgepixels.pixels"
            ],
          "findingsecondpixel_2.width" : [
            "findingremainingedgepixels.width"
            ],
          "findingsecondpixel_2.height" : [
            "findingremainingedgepixels.height"
            ],
          "findingsecondpixel_2.xfirst" : [
            "findingremainingedgepixels.xfirst"
            ],
          "findingsecondpixel_2.yfirst" : [
            "findingremainingedgepixels.yfirst"
            ],
          "findingsecondpixel_2.directionfirst" : [
            "findingremainingedgepixels.directionfirst"
            ],
          "findingremainingedgepixels.xdata" : [
            "xdata"
            ],
          "findingremainingedgepixels.ydata" : [
            "ydata"
            ],
          "findingremainingedgepixels.depthdata" : [
            "depthdata"
            ]
          }
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":366.9964599609375,\"y\":475.8670959472656}"
        },
      "name" : "DrawPixels",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "width"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "height"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "pixels"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "dummyResult"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "position"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "scale"
          }
        ],
      "definition" : {
        "objectType" : "Graph",
        "title" : "DrawPixels",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "width",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "height",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "pixels",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "dummyResult",
            "execPortType" : "Out"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "position",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "scale",
            "execPortType" : "In"
            }
          ],
        "extDeps" : {},
        "nodes" : [
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":1020.531127929688,\"y\":31.68296813964844}"
              },
            "name" : "EmptyDrawingHandle",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "handle"
                }
              ],
            "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle",
            "presetGUID" : "2440020BA6A1CAB1CEB690A198F99C70"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":1436.8544921875,\"y\":31.14314270019531}"
              },
            "name" : "DrawTexturedPlane_1",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "IO",
                "name" : "exec"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "IO",
                "name" : "this"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "name"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "width"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "height"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "pixels"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "mirrorU"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "mirrorV"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "discardAlpha"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "transform"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "dummyResult"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "instance"
                }
              ],
            "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.DrawTexturedPlane",
            "presetGUID" : "0777B8FB148911AD43CC8258FA698C46"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":704.43896484375,\"y\":114.9098510742188}"
              },
            "name" : "Xfo_1",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "ori"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "tr"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "sc"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "Fabric.Exts.Math.Xfo.Xfo",
            "presetGUID" : "A0F6CD63A2069530481F214C62A069AA"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":495.0647277832031,\"y\":17.14056396484375}"
              },
            "name" : "Vec3_1",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "x"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "y"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "z"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "Fabric.Exts.Math.Vec3.Vec3",
            "presetGUID" : "A59E49949F21CFCB14B5711D52330BA7"
            }
          ],
        "connections" : {
          "width" : [
            "DrawTexturedPlane_1.width"
            ],
          "height" : [
            "DrawTexturedPlane_1.height"
            ],
          "pixels" : [
            "DrawTexturedPlane_1.pixels"
            ],
          "position" : [
            "Xfo_1.tr"
            ],
          "scale" : [
            "Vec3_1.x",
            "Vec3_1.y",
            "Vec3_1.z"
            ],
          "EmptyDrawingHandle.handle" : [
            "DrawTexturedPlane_1.this"
            ],
          "DrawTexturedPlane_1.dummyResult" : [
            "dummyResult"
            ],
          "Xfo_1.result" : [
            "DrawTexturedPlane_1.transform"
            ],
          "Vec3_1.result" : [
            "Xfo_1.sc"
            ]
          }
        }
      }
    ],
  "connections" : {
    "filePath" : [
      "LoadImage.filePath"
      ],
    "MeshScale" : [
      "DrawPixels.scale"
      ],
    "order" : [
      "FourierSeries.order",
      "FourierSeries_2.order",
      "FourierSeries_3.order"
      ],
    "tr" : [
      "DrawPixels.position"
      ],
    "LoadImage.pixels" : [
      "findingedge.pixels",
      "DrawPixels.pixels"
      ],
    "LoadImage.width" : [
      "findingedge.width",
      "DrawPixels.width"
      ],
    "LoadImage.height" : [
      "findingedge.height",
      "DrawPixels.height"
      ],
    "findingedge.xdata" : [
      "FourierSeries_2.data"
      ],
    "findingedge.ydata" : [
      "FourierSeries.data"
      ],
    "findingedge.depthdata" : [
      "FourierSeries_3.data"
      ],
    "DrawPixels.dummyResult" : [
      "dummyResult"
      ]
    },
  "requiredPresets" : {
    "Fabric.Core.Data.Cache" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiAlwaysShowDaisyChainPorts" : "true",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "Cache",
      "cacheRule" : "always",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "D903AFD981FE9214C69943F542D5FD60",
      "code" : "dfgEntry {
}
"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle" : {
      "objectType" : "Graph",
      "title" : "EmptyDrawingHandle",
      "cacheRule" : "never",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "handle",
          "execPortType" : "Out",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "2440020BA6A1CAB1CEB690A198F99C70",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 894, \"y\": 100}"
            },
          "name" : "Clear",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              }
            ],
          "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.Clear",
          "presetGUID" : "39E8D81FA7C7C4A825877F16EFE3564F",
          "cacheRule" : "never"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\":567.0,\"y\":56.0}",
            "uiCollapsedState" : "0"
            },
          "name" : "handleVar",
          "ports" : [
            {
              "objectType" : "VarPort",
              "nodePortType" : "IO",
              "name" : "value"
              }
            ],
          "dataType" : "DrawingHandle",
          "extDep" : "InlineDrawing:*"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":287.0,\"y\":56.0}"
            },
          "name" : "CreateDrawingHandle",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "handle"
              }
            ],
          "definition" : {
            "objectType" : "Func",
            "title" : "Create DrawingHandle",
            "ports" : [
              {
                "objectType" : "Port",
                "nodePortType" : "In",
                "name" : "handle",
                "execPortType" : "Out",
                "typeSpec" : "DrawingHandle"
                }
              ],
            "extDeps" : {
              "InlineDrawing" : "*"
              },
            "code" : "dfgEntry {
  handle = DrawingHandle();
}
"
            }
          }
        ],
      "connections" : {
        "Clear.this" : [
          "handle"
          ],
        "handleVar.value" : [
          "Clear.this"
          ],
        "CreateDrawingHandle.handle" : [
          "handleVar.value"
          ]
        }
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.Clear" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.1/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "removes all contents from the DrawingHandle\n\n Supported by DrawingHandle"
        },
      "title" : "Clear",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*"
        },
      "presetGUID" : "39E8D81FA7C7C4A825877F16EFE3564F",
      "code" : "require InlineDrawing;

dfgEntry {
  this.clear();
}
"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.DrawTexturedPlane" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.1/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "helper function to draw a plane given texture values + a single transform\n\n Supported by DrawingHandle"
        },
      "title" : "DrawTexturedPlane",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "exec",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "name",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32" : 512
            },
          "name" : "width",
          "execPortType" : "In",
          "typeSpec" : "UInt32"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32" : 512
            },
          "name" : "height",
          "execPortType" : "In",
          "typeSpec" : "UInt32"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 0,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "name" : "pixels",
          "execPortType" : "In",
          "typeSpec" : "Color[]"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : false
            },
          "name" : "mirrorU",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "mirrorV",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : false
            },
          "name" : "discardAlpha",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "Out",
          "name" : "transform",
          "execPortType" : "In",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "In",
          "name" : "dummyResult",
          "execPortType" : "Out",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "instance",
          "execPortType" : "Out",
          "typeSpec" : "InlineInstance"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*",
        "FabricInterfaces" : "*"
        },
      "presetGUID" : "0777B8FB148911AD43CC8258FA698C46",
      "code" : "require InlineDrawing;

dfgEntry {
  this.drawTexturedPlane(name, width, height, pixels, mirrorU, mirrorV, discardAlpha, transform, dummyResult, instance);
}
"
      },
    "Fabric.Exts.Math.Xfo.Xfo" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.1/HTML/KLExtensionsGuide/Math/Xfo.html",
        "uiTooltip" : "Constructor from the orientation, translation and scaling\n\n Supported by Xfo"
        },
      "title" : "Xfo",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 0,\n  \"g\" : 191,\n  \"b\" : 232\n  }"
            },
          "nodePortType" : "Out",
          "name" : "ori",
          "execPortType" : "In",
          "typeSpec" : "Quat"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "name" : "tr",
          "execPortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Vec3" : {
              "x" : 1,
              "y" : 1,
              "z" : 1
              }
            },
          "name" : "sc",
          "execPortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "Xfo"
          }
        ],
      "extDeps" : {
        "Math" : "*"
        },
      "presetGUID" : "A0F6CD63A2069530481F214C62A069AA",
      "code" : "require Math;

dfgEntry {
  result = Xfo(ori, tr, sc);
}
"
      },
    "Fabric.Exts.Math.Vec3.Vec3" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.1/HTML/KLExtensionsGuide/Math/Vec3.html",
        "uiTooltip" : "Constructor from scalar components\n\n Supported by Vec3"
        },
      "title" : "Vec3",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "x",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "y",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "z",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "Vec3"
          }
        ],
      "extDeps" : {
        "Math" : "*"
        },
      "presetGUID" : "A59E49949F21CFCB14B5711D52330BA7",
      "code" : "require Math;

dfgEntry {
  result = Vec3(x, y, z);
}
"
      }
    },
  "args" : [
    {
      "type" : "String",
      "value" : "R:\\src\\TADevelopment\\RnD_edgedetect\\Textures_original\\Bunny_Left.tga"
      },
    {
      "type" : "Float32",
      "value" : 10
      },
    {
      "type" : "DrawingHandle",
      "value" : null,
      "ext" : "InlineDrawing"
      },
    {
      "type" : "Float64[]",
      "value" : null
      },
    {
      "type" : "Float64[]",
      "value" : null
      },
    {
      "type" : "Float64[]",
      "value" : null
      },
    {
      "type" : "UInt32",
      "value" : 4
      },
    {
      "type" : "Float64",
      "value" : null
      },
    {
      "type" : "Vec3",
      "value" : null,
      "ext" : "Math"
      },
    {
      "type" : "Vec3",
      "value" : null,
      "ext" : "Math"
      }
    ]
  }