{
  "objectType" : "Graph",
  "metadata" : {
    "camera_mat44" : "{\n  \"row0\" : {\n    \"x\" : -0.9310876727104187,\n    \"y\" : -0.3603379428386688,\n    \"z\" : 0.06555097550153732,\n    \"t\" : 4.267117023468018\n    },\n  \"row1\" : {\n    \"x\" : 1.267364837076457e-06,\n    \"y\" : 0.1789405345916748,\n    \"z\" : 0.9841665029525757,\n    \"t\" : 68.12296295166016\n    },\n  \"row2\" : {\n    \"x\" : -0.3664500415325165,\n    \"y\" : 0.9155585765838623,\n    \"z\" : -0.166550487279892,\n    \"t\" : -12.58343410491943\n    },\n  \"row3\" : {\n    \"x\" : 0,\n    \"y\" : 0,\n    \"z\" : 0,\n    \"t\" : 1\n    }\n  }",
    "timeline_start" : "1",
    "timeline_loopMode" : "1",
    "uiGraphZoom" : "{\n  \"value\" : 0.6007722020149231\n  }",
    "timeline_simMode" : "0",
    "camera_focalDistance" : "64.86742401123047",
    "timeline_current" : "1",
    "timeline_end" : "50",
    "uiGraphPan" : "{\n  \"x\" : 490.2003173828125,\n  \"y\" : -221.2579040527344\n  }"
    },
  "title" : "",
  "ports" : [
    {
      "objectType" : "Port",
      "metadata" : {
        "uiPersistValue" : "true"
        },
      "nodePortType" : "Out",
      "name" : "filePath",
      "execPortType" : "In",
      "typeSpec" : "String"
      },
    {
      "objectType" : "Port",
      "metadata" : {
        "uiPersistValue" : "true"
        },
      "nodePortType" : "Out",
      "name" : "MeshScale",
      "execPortType" : "In",
      "typeSpec" : "Float32"
      },
    {
      "objectType" : "Port",
      "metadata" : {
        "uiPersistValue" : "true"
        },
      "nodePortType" : "Out",
      "name" : "HeightScale",
      "execPortType" : "In",
      "typeSpec" : "Float32"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "this",
      "execPortType" : "Out",
      "typeSpec" : "DrawingHandle"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "value",
      "execPortType" : "Out",
      "typeSpec" : "Float64[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "value_2",
      "execPortType" : "Out",
      "typeSpec" : "Float64[]"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "value_3",
      "execPortType" : "Out",
      "typeSpec" : "Float64[]"
      },
    {
      "objectType" : "Port",
      "metadata" : {
        "uiPersistValue" : "true"
        },
      "nodePortType" : "Out",
      "name" : "order",
      "execPortType" : "In",
      "typeSpec" : "UInt32"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "value_4",
      "execPortType" : "Out",
      "typeSpec" : "Float64"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "dummyResult",
      "execPortType" : "Out",
      "typeSpec" : "Vec3"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "tr",
      "execPortType" : "In",
      "typeSpec" : "Vec3"
      }
    ],
  "extDeps" : {},
  "nodes" : [
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-523.7978515625,\"y\":463.681396484375}"
        },
      "name" : "LoadImage",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "verbose"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "filePath"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "result"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "pixels"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "width"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "height"
          }
        ],
      "definition" : {
        "objectType" : "Graph",
        "metadata" : {
          "uiNodeColor" : "{\n  \"r\" : 144,\n  \"g\" : 130,\n  \"b\" : 120\n  }",
          "uiGraphZoom" : "{\n  \"value\" : 0.8138958215713501\n  }",
          "uiHeaderColor" : "{\n  \"r\" : 115,\n  \"g\" : 105,\n  \"b\" : 75\n  }",
          "uiTooltip" : "loads an image from disk",
          "uiGraphPan" : "{\n  \"x\" : 21.2629981637001,\n  \"y\" : 9.372200310230255\n  }"
          },
        "title" : "LoadImage",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "verbose",
            "execPortType" : "In",
            "typeSpec" : "Boolean"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "defaultValues" : {
              "String" : "C:\\Temp\\image1.jpg"
              },
            "name" : "filePath",
            "execPortType" : "In",
            "typeSpec" : "String"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "result",
            "execPortType" : "Out",
            "typeSpec" : "Image2DColor"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "pixels",
            "execPortType" : "Out",
            "typeSpec" : "Color[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "width",
            "execPortType" : "Out",
            "typeSpec" : "Size"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "height",
            "execPortType" : "Out",
            "typeSpec" : "Size"
            }
          ],
        "extDeps" : {
          "OpenImageIO" : "*",
          "FileIO" : "*",
          "Images" : "*"
          },
        "origPresetGUID" : "71A393CF88679424EF2212A78848F258",
        "nodes" : [
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":125.0,\"y\":50.0}"
              },
            "name" : "applyLoadImage",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "verbose"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "filePath"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "success"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "image"
                }
              ],
            "definition" : {
              "objectType" : "Func",
              "title" : "applyLoadImage",
              "ports" : [
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "verbose",
                  "execPortType" : "In",
                  "typeSpec" : "Boolean"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "filePath",
                  "execPortType" : "In",
                  "typeSpec" : "String"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "success",
                  "execPortType" : "Out",
                  "typeSpec" : "Boolean"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "image",
                  "execPortType" : "Out",
                  "typeSpec" : "Image2DColor"
                  }
                ],
              "extDeps" : {},
              "code" : "require OpenImageIO;\r\nrequire FileIO;\r\nrequire Images;\r\n\r\ndfgEntry\r\n{ \r\n  // init the outputs.\r\n  success = false;\r\n  image   = Image2DColor();\r\n\r\n  // open the image file.\r\n  if (verbose)  report(\"opening image file \\\"\" + filePath + \"\\\"\");\r\n  OpenImageInput file = OpenImageInput();\r\n  file.open(filePath);\r\n  if(!file.valid())\r\n  {\r\n    if (verbose)  report(\"ERROR: unable to open image file.\");\r\n    return;\r\n  }\r\n  \r\n  // get the image file's specs, verbose and check image resolution.\r\n  OpenImageSpec fileSpec = file.spec();\r\n  if (verbose)\r\n  {\r\n    report(\"   width    = \" + fileSpec.get_full_width ());\r\n    report(\"   height   = \" + fileSpec.get_full_height());\r\n    report(\"   channels = \" + fileSpec.get_nchannels  ());\r\n  }\r\n  if (fileSpec.get_full_width() <= 0 || fileSpec.get_full_height() <= 0)\r\n  {\r\n    if (verbose)  report(\"ERROR: bad image resolution.\");\r\n    return;\r\n  }\r\n  \r\n  // set output image from image file data.\r\n  OpenImageTypeDesc fileDesc = OpenImageTypeDesc(OpenImage_BASETYPE_FLOAT, OpenImage_AGGREGATE_SCALAR, OpenImage_VECSEMANTICS_NOXFORM);\r\n  switch (fileSpec.get_nchannels())\r\n  {\r\n    case 1:    // gray scale.\r\n    {\r\n      image.resize(fileSpec.get_full_width(), fileSpec.get_full_height());\r\n      Float32 tmp[];\r\n      tmp.resize(image.width * image.height);\r\n      Data data = tmp.data();\r\n      success = file.read_image(fileDesc, data, 0, 0, 0);\r\n      if (success)\r\n      {\r\n        for (UInt32 i=0;i<image.pixels.size();i++)\r\n        {\r\n          image.pixels[i].r = tmp[i];\r\n          image.pixels[i].g = tmp[i];\r\n          image.pixels[i].b = tmp[i];\r\n          image.pixels[i].a = 1.0;\r\n        }\r\n      }\r\n      else\r\n        if (verbose)  report(\"ERROR: read error.\");\r\n      break;\r\n    }\r\n    case 3:    // RGB.\r\n    {\r\n      image.resize(fileSpec.get_full_width(), fileSpec.get_full_height());\r\n      Float32 tmp[];\r\n      tmp.resize(image.width * image.height * 3);\r\n      Data data = tmp.data();\r\n      success = file.read_image(fileDesc, data, 0, 0, 0);\r\n      if (success)\r\n      {\r\n        UInt32 offset = 0;\r\n        for (UInt32 i=0;i<image.pixels.size();i++)\r\n        {\r\n          image.pixels[i].r = tmp[offset++];\r\n          image.pixels[i].g = tmp[offset++];\r\n          image.pixels[i].b = tmp[offset++];\r\n          image.pixels[i].a = 1.0;\r\n        }\r\n      }\r\n      else\r\n        if (verbose)  report(\"ERROR: read error.\");\r\n      break;\r\n    }\r\n    case 4:    // RGBA.\r\n    {\r\n      image.resize(fileSpec.get_full_width(), fileSpec.get_full_height());\r\n      Data data = image.pixels.data();\r\n      success = file.read_image(fileDesc, data, 0, 0, 0);\r\n      if (!success)\r\n        if (verbose)  report(\"ERROR: read error.\");\r\n      break;\r\n    }\r\n    default:   // unsupported amount of channels.\r\n    {\r\n      if (verbose)  report(\"ERROR: unsupported amount of channels.\");\r\n      break;\r\n    }\r\n  }\r\n  \r\n  // done.\r\n  if (success && verbose)\r\n    report(\"image successfully read.\");\r\n}\r\n\r\n"
              }
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":365.0,\"y\":153.0}"
              },
            "name" : "Cache_2",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "value"
                }
              ],
            "executable" : "Fabric.Core.Data.Cache",
            "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":957.7288818359375,\"y\":208.054931640625}"
              },
            "name" : "imageMetaData",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "image"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "pixels"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "width"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "height"
                }
              ],
            "definition" : {
              "objectType" : "Func",
              "title" : "imageMetaData",
              "ports" : [
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "image",
                  "execPortType" : "In",
                  "typeSpec" : "Image2D"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "pixels",
                  "execPortType" : "Out",
                  "typeSpec" : "Color[]"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "width",
                  "execPortType" : "Out",
                  "typeSpec" : "Size"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "height",
                  "execPortType" : "Out",
                  "typeSpec" : "Size"
                  }
                ],
              "extDeps" : {},
              "code" : "dfgEntry {\r\n  //result = lhs + rhs;\r\n  pixels = image.pixels;\r\n  width = image.width;\r\n  height = image.height;\r\n}\r\n"
              }
            }
          ],
        "connections" : {
          "verbose" : [
            "applyLoadImage.verbose"
            ],
          "filePath" : [
            "applyLoadImage.filePath"
            ],
          "applyLoadImage.image" : [
            "Cache_2.value"
            ],
          "Cache_2.value" : [
            "imageMetaData.image"
            ],
          "imageMetaData.image" : [
            "result"
            ],
          "imageMetaData.pixels" : [
            "pixels"
            ],
          "imageMetaData.width" : [
            "width"
            ],
          "imageMetaData.height" : [
            "height"
            ]
          }
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":759.0889282226563,\"y\":1076.8330078125}"
        },
      "name" : "FourierSeries",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "data"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "order"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "sincoefficients"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "coscoefficients"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "title" : "FourierSeries",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "data",
            "execPortType" : "In",
            "typeSpec" : "$TYPE$[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "order",
            "execPortType" : "In",
            "typeSpec" : "UInt32"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "sincoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "coscoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            }
          ],
        "extDeps" : {},
        "code" : "dfgEntry {\r\n  sincoefficients.resize(0);\r\n  coscoefficients.resize(0);\r\n  Float64 doublepi = 6.28318530717958648;\r\n  Float64 multiplier;\r\n  for (UInt32 j = 0 ; j < order + 1 ; j++){\r\n      Float64 sinsum = 0;\r\n      Float64 cossum = 0;\r\n      multiplier = 1;\r\n      if (j==0){\r\n        multiplier = 0.5;\r\n      }\r\n      for (UInt32 i = 0 ; i<data.size() ; i++){\r\n        sinsum = sinsum + ( 2. / data.size() ) * sin( ( doublepi * j * i )/ data.size() ) * data[i] ;\r\n        cossum = cossum + ( 2. * multiplier / data.size() ) * cos( ( doublepi * j * i )/ data.size() ) * data[i] ;\r\n      }\r\n      sincoefficients.push(sinsum);\r\n      coscoefficients.push(cossum);\r\n   }\r\n}\r\n"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":751.930419921875,\"y\":935.6436767578125}"
        },
      "name" : "FourierSeries_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "data"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "order"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "sincoefficients"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "coscoefficients"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "title" : "FourierSeries",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "data",
            "execPortType" : "In",
            "typeSpec" : "$TYPE$[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "order",
            "execPortType" : "In",
            "typeSpec" : "UInt32"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "sincoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "coscoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            }
          ],
        "extDeps" : {},
        "code" : "dfgEntry {\r\n  sincoefficients.resize(0);\r\n  coscoefficients.resize(0);\r\n  Float64 doublepi = 6.28318530717958648;\r\n  Float64 multiplier;\r\n  for (UInt32 j = 0 ; j < order + 1 ; j++){\r\n      Float64 sinsum = 0;\r\n      Float64 cossum = 0;\r\n      multiplier = 1;\r\n      if (j==0){\r\n        multiplier = 0.5;\r\n      }\r\n      for (UInt32 i = 0 ; i<data.size() ; i++){\r\n        sinsum = sinsum + ( 2. / data.size() ) * sin( ( doublepi * j * i )/ data.size() ) * data[i] ;\r\n        cossum = cossum + ( 2. * multiplier / data.size() ) * cos( ( doublepi * j * i )/ data.size() ) * data[i] ;\r\n      }\r\n      sincoefficients.push(sinsum);\r\n      coscoefficients.push(cossum);\r\n   }\r\n}\r\n"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":761.686279296875,\"y\":1229.859497070313}"
        },
      "name" : "FourierSeries_3",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "data"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "order"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "sincoefficients"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "coscoefficients"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "title" : "FourierSeries",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "data",
            "execPortType" : "In",
            "typeSpec" : "$TYPE$[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "order",
            "execPortType" : "In",
            "typeSpec" : "UInt32"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "sincoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "coscoefficients",
            "execPortType" : "Out",
            "typeSpec" : "Float64[]"
            }
          ],
        "extDeps" : {},
        "code" : "dfgEntry {\r\n  sincoefficients.resize(0);\r\n  coscoefficients.resize(0);\r\n  Float64 doublepi = 6.28318530717958648;\r\n  Float64 multiplier;\r\n  for (UInt32 j = 0 ; j < order + 1 ; j++){\r\n      Float64 sinsum = 0;\r\n      Float64 cossum = 0;\r\n      multiplier = 1;\r\n      if (j==0){\r\n        multiplier = 0.5;\r\n      }\r\n      for (UInt32 i = 0 ; i<data.size() ; i++){\r\n        sinsum = sinsum + ( 2. / data.size() ) * sin( ( doublepi * j * i )/ data.size() ) * data[i] ;\r\n        cossum = cossum + ( 2. * multiplier / data.size() ) * cos( ( doublepi * j * i )/ data.size() ) * data[i] ;\r\n      }\r\n      sincoefficients.push(sinsum);\r\n      coscoefficients.push(cossum);\r\n   }\r\n}\r\n"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":162.8867797851563,\"y\":781.8533935546875}"
        },
      "name" : "findingedge",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "pixels"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "width"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "height"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "xdata"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "ydata"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "depthdata"
          }
        ],
      "definition" : {
        "objectType" : "Graph",
        "title" : "",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "pixels",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "width",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "height",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "xdata",
            "execPortType" : "Out"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "ydata",
            "execPortType" : "Out"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "depthdata",
            "execPortType" : "Out"
            }
          ],
        "extDeps" : {},
        "nodes" : [
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":-326.8580017089844,\"y\":383.3693542480469}"
              },
            "name" : "findfirstpixel",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "xstart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "ystart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "pixels"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "width"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "height"
                }
              ],
            "definition" : {
              "objectType" : "Func",
              "title" : "findfirstpixel",
              "ports" : [
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "xstart",
                  "execPortType" : "Out",
                  "typeSpec" : "UInt32"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "ystart",
                  "execPortType" : "Out",
                  "typeSpec" : "UInt32"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "pixels",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "width",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "height",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  }
                ],
              "extDeps" : {},
              "code" : "dfgEntry {\r\n  // This fuction searches for an edge in the picture.\r\n   // Our height is the number of rows of pixels\r\n   xstart = 0;\r\n  for (UInt32 row = 0; row < height; row++)\r\n  {\r\n    // For each row, find the maximum pixel R value\r\n    for (UInt32 column = 0; column < width; column++)\r\n    {\r\n      // The pixels are stored in a 1D array, where\r\n      // the rows are packed together.  We find the \r\n      // correct pixel by expanding our 2D indices\r\n      // to a 1D address\r\n      if (pixels[row * width + column].r > 0)\r\n      {\r\n        xstart = row;\r\n        ystart = column;\r\n      }\r\n      if (xstart > 0)\r\n        break;\r\n    }\r\n     if (xstart > 0)\r\n       break;\r\n  }\r\n}"
              }
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":-29.80117797851563,\"y\":399.9150085449219}",
              "uiCollapsedState" : "0"
              },
            "name" : "findingsecondpixel_2",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "xstart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "ystart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "pixels"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "width"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "height"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "xfirst"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "yfirst"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "directionfirst"
                }
              ],
            "definition" : {
              "objectType" : "Func",
              "title" : "findingsecondpixel",
              "ports" : [
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "xstart",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "ystart",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "pixels",
                  "execPortType" : "In",
                  "typeSpec" : "Color[]"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "width",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "height",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "xfirst",
                  "execPortType" : "Out",
                  "typeSpec" : "UInt32"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "yfirst",
                  "execPortType" : "Out",
                  "typeSpec" : "UInt32"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "directionfirst",
                  "execPortType" : "Out",
                  "typeSpec" : "UInt8"
                  }
                ],
              "extDeps" : {},
              "code" : "dfgEntry {\r\n   if (pixels[xstart* width + ystart + 1].r > 0)\r\n   {\r\n     directionfirst = 1;\r\n     xfirst = xstart;\r\n     yfirst = ystart+1;\r\n   }\r\n   else if (pixels[(xstart+1)* width + ystart ].r > 0)\r\n   {\r\n     directionfirst = 2;\r\n     xfirst = xstart+1;\r\n     yfirst = ystart;\r\n   }\r\n   else\r\n   {\r\n   report('Isolated pixel');\r\n   }\r\n   \r\n  //result = lhs + rhs;\r\n}\r\n"
              }
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":411.5535583496094,\"y\":370.0595397949219}"
              },
            "name" : "findingremainingedgepixels",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "xstart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "ystart"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "pixels"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "width"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "height"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "xfirst"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "yfirst"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "directionfirst"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "xdata"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "ydata"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "depthdata"
                }
              ],
            "definition" : {
              "objectType" : "Func",
              "title" : "findingremainingedgepixels",
              "ports" : [
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "xstart",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "ystart",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "pixels",
                  "execPortType" : "In",
                  "typeSpec" : "Color[]"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "width",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "height",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "xfirst",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "yfirst",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "Out",
                  "name" : "directionfirst",
                  "execPortType" : "In",
                  "typeSpec" : "$TYPE$"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "xdata",
                  "execPortType" : "Out",
                  "typeSpec" : "Float64[]"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "ydata",
                  "execPortType" : "Out",
                  "typeSpec" : "Float64[]"
                  },
                {
                  "objectType" : "Port",
                  "nodePortType" : "In",
                  "name" : "depthdata",
                  "execPortType" : "Out",
                  "typeSpec" : "Float64[]"
                  }
                ],
              "extDeps" : {},
              "code" : "dfgEntry {\r\n  \r\n    UInt8 direction = directionfirst;\r\n    xdata.resize(0);\r\n    ydata.resize(0);\r\n    depthdata.resize(0);\r\n    UInt32 xcurrent = xfirst;\r\n    UInt32 ycurrent = yfirst;\r\n    xdata.push(xcurrent);\r\n    ydata.push(ycurrent);\r\n    depthdata.push(pixels[ (xcurrent  ) * width + (ycurrent) ].r);\r\n    \r\n    while((xcurrent != xstart || ycurrent != ystart)){\r\n\r\n      // The first step is to identify where we are coming from. this is stored in direction. \r\n      // Direction has 4 options 1 moving to the right, 2 moving down, 3 moving to the left, 4 moving up. \r\n      // All of these directions are global or relative to the picture. These are the targets of the switch statements\r\n      switch(direction){\r\n\t\t  case 1:\r\n\t\t  {//brace opening the case\r\n\t\t\t  if (pixels[ (xcurrent-1) * width + (ycurrent  ) ].r > 0){\r\n\t\t\t\t  xcurrent--;\r\n\t\t\t\t  direction = 4;\r\n\t\t\t  } else if (pixels[ (xcurrent  ) * width + (ycurrent+1) ].r > 0){\r\n\t\t\t\t  ycurrent++;\r\n\t\t\t\t  direction = 1;\r\n  \t\t\t} else if (pixels[ (xcurrent+1) * width + (ycurrent  ) ].r > 0){\r\n\t  \t\t\txcurrent++;\r\n\t\t  \t\tdirection = 2;\r\n\t\t\t  } else if (pixels[ (xcurrent  ) * width + (ycurrent-1) ].r > 0){\r\n\t\t\t\t  ycurrent--;\r\n  \t\t\t\tdirection = 3;\r\n\t  \t\t}\r\n        break; \r\n  \t\t}//brace closing the case\r\n\t  \tcase 2:\r\n\t\t  {//brace opening the case\r\n\t\t\t  if (pixels[ (xcurrent  ) * width + (ycurrent+1) ].r > 0){\r\n\t\t\t\t  ycurrent++;\r\n  \t\t\t\tdirection = 1;\r\n\t  \t\t} else if (pixels[ (xcurrent+1) * width + (ycurrent  ) ].r > 0){\r\n\t\t  \t\txcurrent++;\r\n\t\t\t  \tdirection = 2;\r\n  \t\t\t} else if (pixels[ (xcurrent  ) * width + (ycurrent-1) ].r > 0){\r\n\t  \t\t\tycurrent--;\r\n\t\t  \t\tdirection = 3;\r\n\t\t\t  } else if (pixels[ (xcurrent-1) * width + (ycurrent  ) ].r > 0){\r\n\t\t\t\t  xcurrent--;\r\n  \t\t\t\tdirection = 4;\r\n\t  \t\t} \r\n        break;\r\n  \t\t}//brace closing the case\r\n\t  \tcase 3:\r\n\t\t  {//brace opening the case\r\n\t\t\t  if (pixels[ (xcurrent+1) * width + (ycurrent  ) ].r > 0){\r\n\t\t\t\t  xcurrent++;\r\n  \t\t\t\tdirection = 2;\r\n\t  \t\t} else if (pixels[ (xcurrent  ) * width + (ycurrent-1) ].r > 0){\r\n\t\t  \t\tycurrent--;\r\n\t\t\t  \tdirection = 3;\r\n  \t\t\t} else if(pixels[ (xcurrent-1) * width + (ycurrent  ) ].r > 0){\r\n\t  \t\t\txcurrent--;\r\n\t\t  \t\tdirection = 4;\r\n\t\t\t  } else if (pixels[ (xcurrent  ) * width + (ycurrent+1) ].r > 0){\r\n\t\t\t\t  ycurrent++;\r\n  \t\t\t\tdirection = 1;\r\n\t  \t\t} \r\n        break;\r\n  \t\t}//brace closing the case\r\n\t  \tcase 4:\r\n\t\t  {//brace opening the case\r\n\t\t\t  if (pixels[ (xcurrent  ) * width + (ycurrent-1) ].r > 0){\r\n\t\t\t\t  ycurrent--;\r\n  \t\t\t\tdirection = 3;\r\n\t  \t\t} else if (pixels[ (xcurrent-1) * width + (ycurrent  ) ].r > 0){\r\n\t\t  \t\txcurrent--;\r\n\t\t\t  \tdirection = 4;\r\n  \t\t\t} else if (pixels[ (xcurrent  ) * width + (ycurrent+1) ].r > 0){\r\n\t  \t\t\tycurrent++;\r\n\t\t  \t\tdirection = 1;\r\n\t\t\t  } else if (pixels[ (xcurrent+1) * width + (ycurrent  ) ].r > 0){\r\n\t\t\t\t  xcurrent++;\r\n  \t\t\t\tdirection = 2;\r\n\t  \t\t}\r\n  \t\t}//brace closing the case\r\n\t  }//brace closing the switch\r\n      xdata.push(xcurrent);\r\n      ydata.push(ycurrent);\r\n      depthdata.push(pixels[ (xcurrent  ) * width + (ycurrent  ) ].r);\r\n  } //brace closing the while loop\r\n\r\n}//brace closing the function\r\n"
              }
            }
          ],
        "connections" : {
          "pixels" : [
            "findfirstpixel.pixels"
            ],
          "width" : [
            "findfirstpixel.width"
            ],
          "height" : [
            "findfirstpixel.height"
            ],
          "findfirstpixel.xstart" : [
            "findingsecondpixel_2.xstart"
            ],
          "findfirstpixel.ystart" : [
            "findingsecondpixel_2.ystart"
            ],
          "findfirstpixel.pixels" : [
            "findingsecondpixel_2.pixels"
            ],
          "findfirstpixel.width" : [
            "findingsecondpixel_2.width"
            ],
          "findfirstpixel.height" : [
            "findingsecondpixel_2.height"
            ],
          "findingsecondpixel_2.xstart" : [
            "findingremainingedgepixels.xstart"
            ],
          "findingsecondpixel_2.ystart" : [
            "findingremainingedgepixels.ystart"
            ],
          "findingsecondpixel_2.pixels" : [
            "findingremainingedgepixels.pixels"
            ],
          "findingsecondpixel_2.width" : [
            "findingremainingedgepixels.width"
            ],
          "findingsecondpixel_2.height" : [
            "findingremainingedgepixels.height"
            ],
          "findingsecondpixel_2.xfirst" : [
            "findingremainingedgepixels.xfirst"
            ],
          "findingsecondpixel_2.yfirst" : [
            "findingremainingedgepixels.yfirst"
            ],
          "findingsecondpixel_2.directionfirst" : [
            "findingremainingedgepixels.directionfirst"
            ],
          "findingremainingedgepixels.xdata" : [
            "xdata"
            ],
          "findingremainingedgepixels.ydata" : [
            "ydata"
            ],
          "findingremainingedgepixels.depthdata" : [
            "depthdata"
            ]
          }
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":366.9964599609375,\"y\":475.8670959472656}"
        },
      "name" : "DrawPixels",
      "ports" : [
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "width"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "height"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "pixels"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "Out",
          "name" : "dummyResult"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "position"
          },
        {
          "objectType" : "InstPort",
          "nodePortType" : "In",
          "name" : "scale"
          }
        ],
      "definition" : {
        "objectType" : "Graph",
        "metadata" : {
          "uiGraphZoom" : "{\n  \"value\" : 0.8475913405418396\n  }",
          "uiGraphPan" : "{\n  \"x\" : -299.9125867476896,\n  \"y\" : 73.68894752730603\n  }"
          },
        "title" : "DrawPixels",
        "ports" : [
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "width",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "height",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "pixels",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "In",
            "name" : "dummyResult",
            "execPortType" : "Out"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "position",
            "execPortType" : "In"
            },
          {
            "objectType" : "Port",
            "nodePortType" : "Out",
            "name" : "scale",
            "execPortType" : "In"
            }
          ],
        "extDeps" : {},
        "nodes" : [
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":1020.531127929688,\"y\":31.68296813964844}"
              },
            "name" : "EmptyDrawingHandle",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "handle"
                }
              ],
            "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle",
            "presetGUID" : "2440020BA6A1CAB1CEB690A198F99C70"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":1436.8544921875,\"y\":31.14314270019531}"
              },
            "name" : "DrawTexturedPlane_1",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "IO",
                "name" : "this"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "name"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "width"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "height"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "pixels"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "mirrorU"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "mirrorV"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "discardAlpha"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "transform"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "dummyResult"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "instance"
                }
              ],
            "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.DrawTexturedPlane",
            "presetGUID" : "0777B8FB148911AD43CC8258FA698C46"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":741.43896484375,\"y\":159.9098510742188}"
              },
            "name" : "Xfo_1",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "ori"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "tr"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "sc"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "Fabric.Exts.Math.Xfo.Xfo",
            "presetGUID" : "A0F6CD63A2069530481F214C62A069AA"
            },
          {
            "objectType" : "Inst",
            "metadata" : {
              "uiGraphPos" : "{\"x\":495.0647277832031,\"y\":17.14056396484375}"
              },
            "name" : "Vec3_1",
            "ports" : [
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "x"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "y"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "In",
                "name" : "z"
                },
              {
                "objectType" : "InstPort",
                "nodePortType" : "Out",
                "name" : "result"
                }
              ],
            "executable" : "Fabric.Exts.Math.Vec3.Vec3",
            "presetGUID" : "A59E49949F21CFCB14B5711D52330BA7"
            }
          ],
        "connections" : {
          "width" : [
            "DrawTexturedPlane_1.width"
            ],
          "height" : [
            "DrawTexturedPlane_1.height"
            ],
          "pixels" : [
            "DrawTexturedPlane_1.pixels"
            ],
          "position" : [
            "Xfo_1.tr"
            ],
          "scale" : [
            "Vec3_1.x",
            "Vec3_1.y",
            "Vec3_1.z"
            ],
          "EmptyDrawingHandle.handle" : [
            "DrawTexturedPlane_1.this"
            ],
          "DrawTexturedPlane_1.dummyResult" : [
            "dummyResult"
            ],
          "Xfo_1.result" : [
            "DrawTexturedPlane_1.transform"
            ],
          "Vec3_1.result" : [
            "Xfo_1.sc"
            ]
          }
        }
      }
    ],
  "connections" : {
    "filePath" : [
      "LoadImage.filePath"
      ],
    "MeshScale" : [
      "DrawPixels.scale"
      ],
    "order" : [
      "FourierSeries.order",
      "FourierSeries_2.order",
      "FourierSeries_3.order"
      ],
    "tr" : [
      "DrawPixels.position"
      ],
    "LoadImage.pixels" : [
      "findingedge.pixels",
      "DrawPixels.pixels"
      ],
    "LoadImage.width" : [
      "findingedge.width",
      "DrawPixels.width"
      ],
    "LoadImage.height" : [
      "findingedge.height",
      "DrawPixels.height"
      ],
    "findingedge.xdata" : [
      "FourierSeries_2.data"
      ],
    "findingedge.ydata" : [
      "FourierSeries.data"
      ],
    "findingedge.depthdata" : [
      "FourierSeries_3.data"
      ],
    "DrawPixels.dummyResult" : [
      "dummyResult"
      ]
    },
  "requiredPresets" : {
    "Fabric.Core.Data.Cache" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiAlwaysShowDaisyChainPorts" : "true",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "Cache",
      "cacheRule" : "always",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "value",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "D903AFD981FE9214C69943F542D5FD60",
      "code" : "dfgEntry {\n}\n"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle" : {
      "objectType" : "Graph",
      "title" : "EmptyDrawingHandle",
      "cacheRule" : "never",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "handle",
          "execPortType" : "Out",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "2440020BA6A1CAB1CEB690A198F99C70",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 894, \"y\": 100}"
            },
          "name" : "Clear",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "IO",
              "name" : "this"
              }
            ],
          "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.Clear",
          "presetGUID" : "39E8D81FA7C7C4A825877F16EFE3564F",
          "cacheRule" : "never"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\":567.0,\"y\":56.0}",
            "uiCollapsedState" : "0"
            },
          "name" : "handleVar",
          "ports" : [
            {
              "objectType" : "VarPort",
              "nodePortType" : "IO",
              "name" : "value"
              }
            ],
          "dataType" : "DrawingHandle",
          "extDep" : "InlineDrawing:*"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":287.0,\"y\":56.0}"
            },
          "name" : "CreateDrawingHandle",
          "ports" : [
            {
              "objectType" : "InstPort",
              "nodePortType" : "Out",
              "name" : "handle"
              }
            ],
          "definition" : {
            "objectType" : "Func",
            "title" : "Create DrawingHandle",
            "ports" : [
              {
                "objectType" : "Port",
                "nodePortType" : "In",
                "name" : "handle",
                "execPortType" : "Out",
                "typeSpec" : "DrawingHandle"
                }
              ],
            "extDeps" : {
              "InlineDrawing" : "*"
              },
            "code" : "dfgEntry {\n  handle = DrawingHandle();\n}\n"
            }
          }
        ],
      "connections" : {
        "Clear.this" : [
          "handle"
          ],
        "handleVar.value" : [
          "Clear.this"
          ],
        "CreateDrawingHandle.handle" : [
          "handleVar.value"
          ]
        }
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.Clear" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "removes all contents from the DrawingHandle\n\n Supported by DrawingHandle"
        },
      "title" : "Clear",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*"
        },
      "presetGUID" : "39E8D81FA7C7C4A825877F16EFE3564F",
      "code" : "require InlineDrawing;\n\ndfgEntry {\n  this.clear();\n}\n"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.DrawTexturedPlane" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "helper function to draw a plane given texture values + a single transform\n\n Supported by DrawingHandle"
        },
      "title" : "DrawTexturedPlane",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "IO",
          "name" : "this",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "name",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32" : 512
            },
          "name" : "width",
          "execPortType" : "In",
          "typeSpec" : "UInt32"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "UInt32" : 512
            },
          "name" : "height",
          "execPortType" : "In",
          "typeSpec" : "UInt32"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 0,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "name" : "pixels",
          "execPortType" : "In",
          "typeSpec" : "Color[]"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : false
            },
          "name" : "mirrorU",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "name" : "mirrorV",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : false
            },
          "name" : "discardAlpha",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "Out",
          "name" : "transform",
          "execPortType" : "In",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "In",
          "name" : "dummyResult",
          "execPortType" : "Out",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "In",
          "name" : "instance",
          "execPortType" : "Out",
          "typeSpec" : "InlineInstance"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*"
        },
      "presetGUID" : "0777B8FB148911AD43CC8258FA698C46",
      "code" : "require InlineDrawing;\n\ndfgEntry {\n  this.drawTexturedPlane(name, width, height, pixels, mirrorU, mirrorV, discardAlpha, transform, dummyResult, instance);\n}\n"
      },
    "Fabric.Exts.Math.Xfo.Xfo" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0/HTML/KLExtensionsGuide/Math/Xfo.html",
        "uiTooltip" : "Constructor from the orientation, translation and scaling\n\n Supported by Xfo"
        },
      "title" : "Xfo",
      "ports" : [
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 0,\n  \"g\" : 191,\n  \"b\" : 232\n  }"
            },
          "nodePortType" : "Out",
          "name" : "ori",
          "execPortType" : "In",
          "typeSpec" : "Quat"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "name" : "tr",
          "execPortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "Out",
          "defaultValues" : {
            "Vec3" : {
              "x" : 1,
              "y" : 1,
              "z" : 1
              }
            },
          "name" : "sc",
          "execPortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "Xfo"
          }
        ],
      "extDeps" : {
        "Math" : "*"
        },
      "presetGUID" : "A0F6CD63A2069530481F214C62A069AA",
      "code" : "require Math;\n\ndfgEntry {\n  result = Xfo(ori, tr, sc);\n}\n"
      },
    "Fabric.Exts.Math.Vec3.Vec3" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.0.0/HTML/KLExtensionsGuide/Math/Vec3.html",
        "uiTooltip" : "Constructor from scalar components\n\n Supported by Vec3"
        },
      "title" : "Vec3",
      "ports" : [
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "x",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "y",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "nodePortType" : "Out",
          "name" : "z",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "Port",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "nodePortType" : "In",
          "name" : "result",
          "execPortType" : "Out",
          "typeSpec" : "Vec3"
          }
        ],
      "extDeps" : {
        "Math" : "*"
        },
      "presetGUID" : "A59E49949F21CFCB14B5711D52330BA7",
      "code" : "require Math;\n\ndfgEntry {\n  result = Vec3(x, y, z);\n}\n"
      }
    },
  "args" : [
    {
      "type" : "String",
      "value" : "C:\\Users\\Nick\\Documents\\GitHub\\RnD_edgedetect\\Textures_original\\Bunny_Left.tga"
      },
    {
      "type" : "Float32",
      "value" : 10
      },
    {
      "type" : "Float32",
      "value" : 27.34799957275391
      },
    {
      "type" : "DrawingHandle",
      "value" : null,
      "ext" : "InlineDrawing"
      },
    {
      "type" : "Float64[]",
      "value" : null
      },
    {
      "type" : "Float64[]",
      "value" : null
      },
    {
      "type" : "Float64[]",
      "value" : null
      },
    {
      "type" : "UInt32",
      "value" : 4
      },
    {
      "type" : "Float64",
      "value" : null
      },
    {
      "type" : "Vec3",
      "value" : null,
      "ext" : "Math"
      },
    {
      "type" : "Vec3",
      "value" : null,
      "ext" : "Math"
      }
    ]
  }